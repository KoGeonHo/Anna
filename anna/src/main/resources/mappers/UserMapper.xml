<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="edu.fourmen.mapper.userMapper">

	<select id="emailChk" parameterType="string" resultType="_int">
	
		SELECT 
			count(*) as cnt
		FROM 
			AnnaUser
		WHERE 
			user_email = #{ user_email } AND
			isDel = 'N'
			
	</select>
	
	<insert id="join" parameterType="UserVO">
	
		INSERT INTO AnnaUser(
			nickName,
			user_email,
			kakao_auth,
			profile_image,
			user_pwd
		) VALUES (
			#{ nickName },
			#{ user_email },
			#{ kakao_auth },
			#{ profile_image },
			#{ user_pwd }
		)
		
	</insert>
	
	<select id="login" parameterType="UserVO" resultType="UserVO">
	
		SELECT 
			uidx,
			nickName,
			user_email,
			location_auth,
			kakao_auth,
			interested,
			user_pwd
		FROM 
			AnnaUser
		WHERE
			user_email = #{ user_email } AND
			isDel = 'N'
			
	</select>
	
	<select id="keepLogin" parameterType="UserVO" resultType="UserVO">
	
		SELECT 
			uidx,
			nickName,
			user_email,
			location_auth,
			kakao_auth,
			interested,
			user_pwd
		FROM 
			AnnaUser
		WHERE
			uidx = #{ uidx }
			
	</select>
	
	<update id="updateKakaoAuthKey" parameterType="UserVO">
	
		UPDATE 
			AnnaUser
		SET
			kakao_auth = #{ kakao_auth }
		WHERE
			uidx = #{ uidx }
	
	</update>
	
	<select id="getUserInfo" parameterType="int" resultType="UserVO">
		
		SELECT
			nickName,
			user_email,
			addr1,
			addr2,
			addr_code,
			interested,
			location_auth,
			kakao_auth,
			profile_image,
			introduce,
			jdate
		FROM
			AnnaUser
		WHERE
			uidx = #{ uidx }
		
	</select>
	
	<update id="userInfoMod" parameterType="UserVO">
	
		UPDATE 
			AnnaUser
		SET
			nickName = #{ nickName },
			introduce = #{ introduce }
		WHERE 
			uidx = #{ uidx }
			
	</update>
	
	<update id="updateInterested" parameterType="UserVO">
	
		UPDATE
			AnnaUser
		SET
			interested = #{ interested }
		WHERE 
			uidx = #{ uidx }
			
	</update>
	
	<update id="updateLocation" parameterType="UserVO">
	
		UPDATE
			AnnaUser
		SET
			location_auth = #{ location_auth }
		WHERE 
			uidx = #{ uidx }
			
	</update>
	
	<select id="getLocation" parameterType="int" resultType="string">
	
		SELECT
			location_auth
		FROM
			AnnaUser
		WHERE
			uidx = #{ uidx }
			
	</select>
	
	<select id="getInterestedItem" parameterType="java.util.List" resultType="BoardItemVO">
	
		SELECT
			item_idx,
			uidx,
			cate_idx,
			title,
			contents,
			wdate,
			addr1,
			addr2,
			addr_code,
			image1,
			image2,
			image3,
			image4,
			image5,
			image6,
			image7,
			image8,
			image9,
			image10,
			keyword,
			price,
			offer,
			hit,
			state
		FROM
			Board_Items
		WHERE
			isdel = 'N' limit 1,15
		<!-- WHERE
			<foreach collection="list" item="item" separator="OR" open="(" close=")">
				keyword like concat('%',#{item},'%')
			</foreach> -->
			
	</select>
	
	<select id="neighborList" parameterType="int" resultType="UserVO">
		
		SELECT 
			uidx,
			nickName,
			user_email,
			profile_image
		FROM 
			AnnaUser
		WHERE 
			uidx 
		IN
			(SELECT uidx FROM Neighbor WHERE uidx = #{ uidx })
			 
	</select>
	
	<select id="myTownCommunityList" parameterType="java.util.List" resultType="boardvo"> 
		
		SELECT
			b.bidx,
			b.uidx,
			(SELECT nickName FROM AnnaUser u where u.uidx = b.uidx) as nickName,
			b.board_type,
			b.title,
			b.contents,
			DATE_FORMAT(b.wDate,'%Y-%m-%d') as wDate,
			b.hit,
			b.image1,
			b.image2,
			b.image3,
			b.image4,
			b.image5
		FROM 
			Board b
		<!-- WHERE
			location in  -->
			<!-- <foreach collection="list" item="item" separator="," open="(" close=")">
				#{item}
			</foreach> -->
		ORDER BY bidx DESC
		LIMIT 1, 10;
	</select> 
	
	
	<select id="getChatList" parameterType="int" resultType="chatVO">
	
		SELECT 
			a.item_idx,
			a.invited,
			(select nickName FROM AnnaUser WHERE uidx = a.invited) invitedNickName,
			a.chat_host,
			(select nickName FROM AnnaUser WHERE uidx = a.chat_host) hostNickName,
			(select b.contents from chat b where a.item_idx = b.item_idx and a.invited = b.invited and a.chat_host = b.chat_host order by cdate desc Limit 1) as lastChat,
			(select date_format(b.cdate,'%Y/%m/%d %p %H:%i') from chat b where a.item_idx = b.item_idx and a.invited = b.invited and a.chat_host = b.chat_host order by cdate desc Limit 1) as lastChatDate
		FROM 
			chat a 
		WHERE 
			chat_host = #{uidx} OR
			invited = #{uidx}
		GROUP BY item_idx, chat_host, invited
		ORDER BY lastChatDate DESC
		
	</select>
	
	<select id="getChatViewList" parameterType="chatVO" resultType="chatVO">
		SELECT 
			a.item_idx,
			a.uidx,
			a.invited,
			(select nickName FROM AnnaUser WHERE uidx = a.invited) invitedNickName,
			a.chat_host,
			(select nickName FROM AnnaUser WHERE uidx = a.chat_host) hostNickName,
			a.contents,
			date_format(a.cdate,'%Y/%m/%d %p %H:%i') as cDate,
			a.chat_read
		FROM
			chat a
		WHERE
			a.item_idx = #{item_idx} AND
			a.chat_host = #{chat_host} AND
			a.invited = #{invited}
	</select>
	
</mapper>




